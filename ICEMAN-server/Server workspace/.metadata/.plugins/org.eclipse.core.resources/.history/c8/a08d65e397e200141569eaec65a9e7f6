package com.breadcrumbs.models;

import java.util.Hashtable;
import java.util.Iterator;

import org.json.JSONException;
import org.json.JSONObject;
import org.neo4j.graphdb.Node;
import org.neo4j.graphdb.ResourceIterable;
import org.neo4j.graphdb.Transaction;

import com.breadcrumbs.database.DBMaster;
import com.breadcrumbs.database.NodeController;
import com.breadcrumbs.database.DBMaster.myRelationships;
import com.breadcrumbs.test.CrumbTests.myLabels;

public class Trail {
		
	private DBMaster dbMaster;
	private NodeConverter nodeConverter;
	public String SaveTrail(String trailName, String userId, String description ) {
		Hashtable<String, Object> keysAndItems = new Hashtable<String, Object>();
		keysAndItems.put("TrailName", trailName);
		keysAndItems.put("UserId", userId);
		keysAndItems.put("Description", description);

		dbMaster = DBMaster.GetAnInstanceOfDBMaster();
		int trailId = dbMaster.SaveNode(keysAndItems, com.breadcrumbs.database.DBMaster.myLabels.Trail);	
		Node trail = dbMaster.RetrieveNode(trailId);
		Node User = dbMaster.RetrieveNode(Integer.parseInt(userId));
		
		dbMaster.CreateRelationship(User, trail, myRelationships.Controls);
		return String.valueOf(trailId);		
	}
	
	/*
	 * Record a point along ones trail
	 */
	public String SavePoint(String latitude, String longitude, String lastPointId, String trailId) {
		Hashtable<String, Object> keysAndItems = new Hashtable<String, Object>();
		keysAndItems.put("latitude", latitude);
		keysAndItems.put("longitude", longitude);
		dbMaster = DBMaster.GetAnInstanceOfDBMaster();
		Node trail = dbMaster.RetrieveNode(Integer.parseInt(trailId));
		
		//Save our new node, then fetch it and create the new relationship with it.
		int pointId = dbMaster.SaveNode(keysAndItems, com.breadcrumbs.database.DBMaster.myLabels.Point);
		Node pointNode = dbMaster.RetrieveNode(pointId);
		dbMaster.CreateRelationship(trail, pointNode, myRelationships.Point_In);
		
		//Now make sure our last nodes pointer points to this one.
		Node lastLocationNode = dbMaster.RetrieveNode(Integer.parseInt(lastPointId));
		dbMaster.updateNode(lastLocationNode, "next", pointId);
		
		return Integer.toString(pointId);
	}
	
	public String GetTrailAndCrumbs(String trailId) {
		NodeController nc = new NodeController();
		String crumbs = nc.GetAllRelatedNodes(trailId, myLabels.Crumb, "trailId", "TrailName");
		JSONObject trail = null;
		try {
			//trail = new JSONObject(nc.FetchNodeJson(trailId));
			System.out.println("Crumbs: " + crumbs.toString());
			trail.append("CrumbList", crumbs.toString());
		} catch (JSONException e) {
			System.out.println("An Error occured converting trail to json");
			e.printStackTrace();
		}
		
		return trail.toString();
	}
	
	public String GetAllRelatedNodes(int baseNodeId,  myLabels label, String property) {
		nodeConverter = new NodeConverter();
		dbMaster = DBMaster.GetAnInstanceOfDBMaster();
		
    	if (dbMaster == null) {
    		System.out.print("There was an issue getting a valid instance of the database");
    	}
    	//Get our trail
    	//Get all the crumbs for our trail
    	//Then format it like : {Trail : {crumb1: {chat : this, talk : this}, crumb2: {you : getit?}}
    	JSONObject trailJsonObject = new JSONObject();
    	
    	//Get all the crumbs
    	Transaction tx = dbMaster.GetDatabaseInstance().beginTx();
    	JSONObject jsonResponse = new JSONObject();
    	ResourceIterable<Node> node = dbMaster.GetDatabaseInstance().findNodesByLabelAndProperty(label, property, baseNodeId);
		Iterator nodeSearcher = node.iterator();
		System.out.println("Getting all Trails for a user");
		try {
			int numberOfNodes = 0;
			
			while (nodeSearcher.hasNext()) {
				//Get the node once, as each time we use "Next()" we move forward on the list
				Node trail = (Node) nodeSearcher.next();
				
				//Construct a jsonString using the node converter for the node.
				//Add the string to the trail object under the crumbs id (? or name?)
				JSONObject crumbString = nodeConverter.ConvertSingleNodeToJSON(trail);
				trailJsonObject.append(crumbString.getString(""), crumbString.toString());	
				}
			} catch(JSONException ex) {
				System.out.println("THIS JUST CRASHED FUUUUUUCKKKKK");
				ex.printStackTrace();		
		}
		finally {
			tx.finish();
		}
		System.out.println("Here is the jsonOBject");
		return trailJsonObject.toString();
	}
	
	public String GetAllTrailsForAUser(int id) {
		nodeConverter = new NodeConverter();
		dbMaster = DBMaster.GetAnInstanceOfDBMaster();
		
    	if (dbMaster == null) {
    		System.out.print("There was an issue getting a valid instance of the database");
    	}
    	//Get our trail
    	//Get all the crumbs for our trail
    	//Then format it like : {Trail : {crumb1: {chat : this, talk : this}, crumb2: {you : getit?}}
    	JSONObject trailJsonObject = new JSONObject();
    	
    	//Get all the crumbs
    	Transaction tx = dbMaster.GetDatabaseInstance().beginTx();
    	JSONObject jsonResponse = new JSONObject();
    	ResourceIterable<Node> node = dbMaster.GetDatabaseInstance().findNodesByLabelAndProperty(myLabels.Crumb, "user", 0);
		Iterator nodeSearcher = node.iterator();
		System.out.println("Getting all Trails for a user");
		try {
			int numberOfNodes = 0;
			
			while (nodeSearcher.hasNext()) {
				//Get the node once, as each time we use "Next()" we move forward on the list
				Node trail = (Node) nodeSearcher.next();
				
				//Construct a jsonString using the node converter for the node.
				//Add the string to the trail object under the crumbs id (? or name?)
				JSONObject crumbString = nodeConverter.ConvertSingleNodeToJSON(trail);
				trailJsonObject.append(crumbString.getString("Title"), crumbString.toString());	
				}
			} catch(JSONException ex) {
				System.out.println("THIS JUST CRASHED FUUUUUUCKKKKK");
				ex.printStackTrace();		
		}
		finally {
			tx.finish();
		}
		System.out.println("Here is the jsonOBject");
		return trailJsonObject.toString();
	}
}
